import dotenv from 'dotenv'
import { toKebabCase } from './utils/str'
import { version } from '../package.json'

dotenv.config()

const REQUIRED_ENVS = ['OPEN_AI_API_KEY']

const { OPEN_AI_API_KEY } = process.env

if (!OPEN_AI_API_KEY) {
  const missingEnvs = REQUIRED_ENVS.filter((x) => !process.env[x]).join(', ')
  throw new Error(
    'Some of .env required variables has not been set\n' +
      `\n    List of missing value identifiers: ${missingEnvs}` +
      '\n    Checkout .env.example at the root of the app' +
      '\n    It is also might be the case that you are trying to run script from the wrong place' +
      '\n    Try to run the program from the path where .env file is present\n'
  )
}

export default {
  /* SPADAR MODULE version */
  version: version,

  /* All paths are relative to the root of ADAPTER MODULE */
  adapterModule: {
    /**
     * Schema by which SPADAR CLI is generating API structure and typings
     * could be generated from template but filled in by user MANUALLY
     **/
    schemaFilePath: 'src/adapters-schema.ts',

    /**
     * ADAPTER MODULE API typings is gathered in the `index.ts` file
     * and MUST BE generated by SPADAR CLI AUTOMATICALLY
     **/
    apiTypingsFilePath: 'src/types/index.ts',

    /**
     * Path to a specific adapter typings directory
     * which MUST BE generated by SPADAR CLI initially
     * but edited by user MANUALLY
     **/
    adapterTypingsFilePath: (adapterId: string) =>
      `src/types/adapters/${toKebabCase(adapterId)}/index.ts`,

    /**
     * Path to a specific adapter and unit directory
     * which MUST BE generated by SPADAR CLI AUTOMATICALLY
     **/
    unitTypingsFilePath: (adapterId: string, unitId: string) =>
      `src/types/adapters/${toKebabCase(adapterId)}/units/${toKebabCase(
        unitId
      )}`,

    /**
     * Path to a specific adapter DEBUG ADAPTER which
     * MUST BE generated by SPADAR CLI AUTOMATICALLY
     **/
    debugAdapterAPIFilePath: (adapterId: string) =>
      `src/adapters/${toKebabCase(adapterId)}/debug-adapter.ts`,

    /**
     * Path to a specific adapter DEBUG ADAPTER which
     * MUST BE generated by SPADAR CLI INITIALLY
     * but then edited by user MANUALLY
     **/
    adapterAPIFilePath: (adapterId: string) =>
      `src/adapters/${toKebabCase(adapterId)}/index.ts`,

    /**
     * Path to ADPATER MODULE API index file which
     * MUST BE generated by SPADAR CLI AUTOMATICALLY
     **/
    apiEntryFilePath: `src/index.ts`,
  } as const,

  // TODO: should be removed from the config
  openAI: { apiKey: OPEN_AI_API_KEY },
}
