import dotenv from 'dotenv'
import { toKebabCase } from './utils/str'
import { version } from '../package.json'

dotenv.config()

const REQUIRED_ENVS = ['OPEN_AI_API_KEY']

const { OPEN_AI_API_KEY } = process.env

if (!OPEN_AI_API_KEY) {
  const missingEnvs = REQUIRED_ENVS.filter((x) => !process.env[x]).join(', ')
  throw new Error(
    'Some of .env required variables has not been set\n' +
      `\n    List of missing value identifiers: ${missingEnvs}` +
      '\n    Checkout .env.example at the root of the app' +
      '\n    It is also might be the case that you are trying to run script from the wrong place' +
      '\n    Try to run the program from the path where .env file is present\n'
  )
}

export default {
  /* SPADAR module version */
  version: version,

  /* All paths are relative to the root of ADAPTER module source */
  adapter: {
    /**
     * Adapter schema is the source file for generations:
     *
     *  - Connector API
     *  - Connector typings
     *  - Adapter API entry point
     *
     * Expected paths of the files are specified here.
     **/
    schemaFilePath: 'src/schema.ts',

    /**
     * File path to a specific CONNECTOR typings file
     * which MUST BE generated by SPADAR cli AUTOMATICALLY
     **/
    connectorTypingsFilePath: (connectorId: string) =>
      `src/types/connectors/${toKebabCase(connectorId)}.typings.ts`,

    /**
     * File path to a specific CONNECTOR API signature file
     * which MUST BE generated by SPADAR cli AUTOMATICALLY
     **/
    connectorSignaturePath: (connectorId: string) =>
      `src/types/connectors/${toKebabCase(connectorId)}.signature.ts`,

    /**
     * File path to a specific CONNECTOR which MUST BE generated
     * by SPADAR cli INITIALLY but then edited by user MANUALLY
     **/
    connectorFilePath: (connectorId: string) =>
      `src/connectors/${toKebabCase(connectorId)}.ts`,

    /**
     * File path to ADAPTER API entry point
     * MUST BE generated by SPADAR cli AUTOMATICALLY
     **/
    adapterEntryPoint: `src/adapter.ts`,
  } as const,

  // TODO: should be removed from the config
  openAI: { apiKey: OPEN_AI_API_KEY },
}
